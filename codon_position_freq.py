# Skyler Kuhn
# This is a program to calculate the frequency of A, T, C, G at each position.

sequencelist = ["ATGAGCACAATTTCGGTGGCATCTGAAGAGTCTCTACATGATGCGTCTGTTTCTACTGCCTCCACTACCGGCGCTGAGGGAGTCACGTTTGATTCTAACGAGCAAACGAATCTGGACGACATGATTGGCGTGGCGGAGCCGTTGAAGCATACGTCGACACTCACGTCAATCGTTGACCAAAAAGTCGCATTGATTCAAAAAGGCGGTGCCCCCTCTGTGCACTCTTTCCTTTACACCGTGCCTCACCTTTTCACCCTAACCGAGGAACAAATTACTGGCCTAAACGTGATGCTGCGCGAGTACAGTGAAATGGATATTATTGTCGATGAAGGAACTCTACTAACGCATGTCTTTGTGCTGGCTTCAGGCACCGTTGAGGTTATCAACACAAAAGTTGGTCGTGCATCCATCGTTGGCCATCGCCGGGTCGGGAGTATTACTGCACCAAACATTTTTGGTATCGATAGTGTAATCTTGGAAAAACCAACGGAGTTCTCATACCACGCAAGTTCTTTAACAACGCTACTTCTTATACCAAAGCGACAATTCTGTGAGCTTTTTACTCGTTCCCCAATGTTTTCCAGTAGTGTTTCTGTTCAGATTGTACAAACTCTTTCTGTATTCGCCGTATTTGAGGATTTTTGTCGTGCTCTTTTTGGGTTATCGTCATCATCCGTGTGTGGAAGACGCAGTTTTGGTGAGGGCGGGTATAAGTTATCTATACCCACAGCCGTGAGTATTTATGAGTCCAGTGGCACAGTCGTCCACAAATTAATGCATTCTACTGCAATTGATACCGATGCGTTGCATTACTGCGTCAAAAGACTTCCGGAAAAATTCACGGAAACATTTCTTATTACTTTGTCGCGCAGCATACCTAACTACCTCTCCGATGGGGTCGCCTTTTCAACAACAATATCTCTTGAGTCAGCACGACGGCGGAGGGGCGCGTGGAAAATTGCCGAAAAAGGACAAATTATTGTCATGGCGCGGGATGGATTTACAGACATTATTGATTTTGTTACCAACTTGTGCATGTTGATTGTAGAAACGAGAAAAATAAGGTTGCGTTTGCAGCGGCTTGCTTCACCACTGGCCATTGATTTTCTTCGCAATTTACTTTCCATGGATGAAGCGACATCGAATACTGCAGTCAGGGCGGTTCTTGCCCAGTTACCGTTTTCAGAGACGGAAATTGATGGCCTGATGCAAGTTTGGGAAGGATCCGCAATTATCAATGTGCTGTACAACATTTTATTACACCGTGAGGAGTTTGTTGTGCACGTTGACGTAAACTTGTCGAAGAAGTTCTCTCAAGATCCTTATCAAAAGTGGGGTCTTTGCATCAATCGGCACATCAGGGCGGAGCTTGGCATTGGTGGCGAAGAAGCACTCCCATCGGATTTGACGATTGATATCATTTTTTCATCTAACATTACTATTAAGAGTCTTTTGTGTTCTGCTCCTGAGGAGTTCAGGTTGTTGCTGGAGAAATATATTGAGTCCCAGTCATCGACCACCACGTTGAAGAACCCGGATGACTATTATCTCTATGTATTAGCACAGGTTTTGGAGGAGGAGGACTCCATGAGGGAGGCGTATCGTCAGCACCTAGAGGAAGCAGGCTTTATCATGATGGAGGATTCATTTATTTCGGGACTTGTCGTCGATCTTATTAACATTGGTAAATTGCCTATTTCAGGTATAAATGCCTCATTGCGTCATGCAGCGAAAAATAGGCAACGCATGCAGGGAAATAGCTTTATTATCAACGTTGATAGGACGTTTGGTGCACAGGTTGAGACCATTTTACGAACTCTTGTTCTTATTTTTGGCGATTATATTCGCAGTGTTAATCTTACTGGTGGTGTGGCCGGCGTTGTCGGGAATCGTGGCGATGTTGTTCTGCCCACTCGACTGCTTTTCTCAAAACAATCTTTTGGAGAGGACTCTACCGATGAAACACGCGTGTGCAACACAGACGGTATACATGAAAAAGATGTAATTCCCTTTTTGGGAGAAGGCAACGTGGTTCTTCACAGGGGTGTGTGCGTCACGATTCCTGGCGTTTTTCTGTATAGTGACTCCGTATTGCGGTTATATAAGGTGGTTCATGGATGCACTTGTGTGGACATGAGGAGCAGTTACGTGGCGCGGCAAGTTGAGGAGAGCCACCGCGCAGGGGTACTAAAAAGGGGAGTAACGAGAAGATTTCTGTTTTATGTGGACACGGTGCCCCTTAACAACGATGGGGACTCCGAGTCTTACACGCAGAAGAGCGACGTACTGTTTTCTATTTACGCAACCGCCCGTTCCCTATTGAATTTGATTCTTTTTTCCTGA"]
codonlist = []
Alist = [0]*3
Clist = [0]*3
Glist = [0]*3
Tlist = [0]*3
CodonFrequency = {"A":Alist,"T":Tlist,"C":Clist,"G":Glist}
for seq in sequencelist:
    for pos in range(0,len(seq),3):
        codon = seq[pos:pos+3]
        codonlist.append(codon)
        for loc, nuc in enumerate(codon):
            if codon[loc] == "A":
                CodonFrequency[nuc][loc] += 1
            if codon[loc] == "T":
                CodonFrequency[nuc][loc] += 1
            if codon[loc] == "C":
                CodonFrequency[nuc][loc] += 1
            if codon[loc] == "G":
                CodonFrequency[nuc][loc] += 1

print(CodonFrequency)

